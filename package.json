{
  "name": "azdo-shellcheck",
  "description": "Azure DevOps extension for ShellCheck",
  "version": "0.3.66",
  "license": "MIT",
  "private": true,
  "repository": {
    "type": "git",
    "url": "git+https://github.com/swellaby/azdo-shellcheck.git"
  },
  "author": {
    "url": "http://swellaby.com",
    "name": "Swellaby",
    "email": "opensource@swellaby.com"
  },
  "contributors": [
    {
      "name": "Bailey Everts",
      "url": "https://github.com/beverts312"
    },
    {
      "email": "opensource@swellaby.com",
      "name": "Caleb Cartwright",
      "url": "https://github.com/calebcartwright"
    }
  ],
  "bugs": {
    "url": "https://github.com/swellaby/azdo-shellcheck/issues/new/choose"
  },
  "scripts": {
    "build": "npm run coverage:enforce && npm run lint:build",
    "clean:publish": "rimraf .publish",
    "clean:vsix": "rimraf .vsix",
    "clean:package": "rimraf .publish .vsix",
    "clean:test": "rimraf .testresults .coverage",
    "clean:test:unit": "rimraf .testresults/unit .coverage/unit",
    "clean:test:component": "rimraf .testresults/component .coverage/component",
    "clean:test:functional": "rimraf .testresults/functional",
    "clean:js": "rimraf {test,src}/**/*.{js,map}",
    "clean": "npm run clean:test && npm run clean:js && npm run clean:package",
    "pretranspile": "npm run clean:js",
    "transpile": "tsc",
    "tslint": "tslint -p tsconfig.json -t stylish",
    "eslint:build": "eslint **/*.js",
    "eslint": "npm run eslint:build",
    "preeslint": "npm run transpile",
    "lint": "npm run tslint && npm run eslint",
    "lint:build": "npm run tslint && npm run eslint:build",
    "test": "npm run test:unit",
    "pretest:unit": "npm run transpile && npm run clean:test:unit",
    "test:unit": "mocha --config test/unit/.mocharc.yml",
    "test:unit:build": "mocha --config test/unit/.mocharc.yml",
    "posttest:unit": "replace-in-file --isRegex true \"/(.js)/g\" .ts .testresults/unit/sonar.xml",
    "pretest:component": "npm run transpile && npm run clean:test:component",
    "test:component": "mocha --config test/component/.mocharc.yml",
    "test:component:build": "mocha --config test/component/.mocharc.yml",
    "pretest:functional": "npm run transpile && npm run clean:test:functional",
    "test:functional": "mocha --config test/functional/.mocharc.yml",
    "test:functional:at": "mocha --config test/functional/.mocharc.yml",
    "test:functional:at:mac": "npm run test:functional:at -- --grep=Mac",
    "test:functional:at:linux": "npm run test:functional:at -- --grep=Linux",
    "test:functional:at:windows": "npm run test:functional:at -- --grep=Windows",
    "test:functional:at:ext": "npm run test:functional:at -- --grep=Extension",
    "coverage": "npm run coverage:unit",
    "coverage:enforce": "npm run coverage:unit:enforce",
    "coverage:open": "npm run coverage:unit:open",
    "coverage:unit": "nyc --report-dir .coverage/unit --check-coverage false npm run test:unit",
    "coverage:unit:enforce": "nyc --report-dir .coverage/unit npm run test:unit",
    "coverage:unit:open": "npm run coverage:unit && open-cli .coverage/unit/index.html",
    "coverage:component": "nyc --report-dir .coverage/component --check-coverage false npm run test:component",
    "coverage:component:enforce": "nyc --report-dir .coverage/component npm run test:component",
    "coverage:component:open": "npm run coverage:component && open-cli .coverage/component/index.html",
    "package:deps": "npm run package:deps:shellcheck && npm run package:deps:install",
    "package:deps:shellcheck": "copy-node-modules . .publish/tasks/shellcheck",
    "package:deps:install": "copy-node-modules . .publish/tasks/install",
    "prepackage:tasks": "npm run version:bump:tasks",
    "package:tasks": "npm run package:task:shellcheck && npm run package:task:install",
    "package:task:shellcheck": "mkdirp .publish/tasks/shellcheck && ncp src/tasks/shellcheck/ .publish/tasks/shellcheck/ --filter=\"^((?!(\\.(map|ts))).)+$\"",
    "package:task:install": "mkdirp .publish/tasks/install && ncp src/tasks/install/ .publish/tasks/install/ --filter=\"^((?!(\\.(map|ts))).)+$\"",
    "prepackage:ext": "npm run clean:package && npm run transpile && npm run package:deps && npm run package:tasks",
    "package:ext": "tfx extension create --manifest-globs vss-extension.json --rev-version --output-path .vsix/",
    "tfx": "tfx",
    "tfx:login": "tfx login",
    "pretask:shellcheck:upload": "npm run pretasks:upload",
    "pretask:install:upload": "npm run pretasks:upload",
    "pretasks:upload": "npm run prepackage:ext",
    "tasks:upload": "npm run task:shellcheck:reupload && npm run task:install:reupload",
    "task:shellcheck:upload": "npm run task:shellcheck:reupload",
    "task:shellcheck:reupload": "tfx build tasks upload --task-path .publish/tasks/shellcheck",
    "task:shellcheck:delete": "tfx build tasks delete --task-id 7d357064-b610-44c0-b52c-734fdf665a7c",
    "task:install:upload": "npm run task:install:reupload",
    "task:install:reupload": "tfx build tasks upload --task-path .publish/tasks/install",
    "task:install:delete": "tfx build tasks delete --task-id 3f74db91-b37c-4602-bb92-2658c6d136f2",
    "version:bump:tasks": "azp-bump src/tasks/**/task.json",
    "dev:reset": "npm run clean && node -e \"require('rimraf').sync('node_modules');\" && npm run dev:setup",
    "dev:setup": "npm i && npm run build",
    "run:shellcheck:local": "npm run transpile && node src/tasks/shellcheck/runner.js",
    "run:install:local": "npm run transpile && node src/tasks/install/runner.js"
  },
  "dependencies": {
    "azure-pipelines-task-lib": "^2.9.3",
    "azure-pipelines-tool-lib": "^0.13.0",
    "semver": "^7.0.0",
    "tslib": "^2.0.0",
    "uuid": "^8.0.0"
  },
  "devDependencies": {
    "@swellaby/eslint-config": "^2.0.0",
    "@swellaby/nyc-config": "^3.0.7",
    "@swellaby/tslint-config": "^3.0.1",
    "@types/chai": "^4.2.14",
    "@types/mocha": "^8.2.2",
    "@types/node": "^14.14.2",
    "@types/sinon": "^10.0.0",
    "azp-bump": "^2.0.15",
    "chai": "^4.2.0",
    "copy-node-modules": "^1.1.1",
    "eslint": "^7.11.0",
    "got": "^11.8.0",
    "husky": "^4.3.0",
    "mkdirp": "^1.0.4",
    "mocha": "^8.2.0",
    "mocha-multi-reporters": "^1.1.7",
    "mocha-sonarqube-reporter": "^1.0.2",
    "ncp": "^2.0.0",
    "nyc": "^15.1.0",
    "open-cli": "^6.0.1",
    "replace-in-file": "^6.1.0",
    "rimraf": "^3.0.2",
    "sinon": "^10.0.0",
    "tfx-cli": "0.9.0",
    "tslint": "^6.1.3",
    "typescript": "^4.0.3"
  }
}
